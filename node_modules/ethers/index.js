export const ethers = {
  id: (s) => '0x'+Buffer.from(s).toString('hex'),
  zeroPadValue: (val,len) => {
    const v=val.startsWith('0x')?val.slice(2):val;
    return '0x'+v.padStart(len*2,'0');
  },
  toQuantity: (n) => {
    const v=typeof n==='bigint'?n:BigInt(n);
    return '0x'+v.toString(16);
  },
  formatUnits: (n,d=18) => {
    const v=typeof n==='bigint'?n:BigInt(n);
    return (v/(10n**BigInt(d))).toString();
  },
  JsonRpcProvider: class{
    async getBlockNumber(){return 0;}
    async getLogs(){return [];}
  },
  Contract: class{
    constructor(){ }
    async symbol(){return '?';}
    async decimals(){return 18;}
  }
};
export default { ethers };
